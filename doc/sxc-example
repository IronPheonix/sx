#!/usr/bin/env python
"""
This script demostrates the use of sx API to make native calls that will extract
and analysze reports. Then after the analysis is complete, the analysis data can
be retrieved.

@author    :  Shane Bradley
@contact   :  sbradley@redhat.com
@version   :  2.10
@copyright :  GPLv2
"""
import sys
import os.path
import logging

import sx
from sx.logwriter import LogWriter
import sx.sxconsole
from sx.sxconsole import SXConsole
from sx.reports import ReportsHelper
from sx.plugins import PluginsHelper

SXCE_LOGGER_NAME = "sxc-exmaple"

# ###############################################################################
# Main Function
# ###############################################################################
if __name__ == "__main__":
    try:
        sxceLogger = LogWriter(SXCE_LOGGER_NAME,
                              logging.INFO,
                              sx.MAIN_LOGGER_FORMAT,
                              disableConsoleLog=False)

        message = "Example on how to get the data from SXConsole after the analysis is complete."
        logging.getLogger(SXCE_LOGGER_NAME).info(message)

        # Verify a uid was given unless path is given.
        uid = "42424242"
        # The "listOfReports" list is paths to some sosreports that are used as
        # examples.
        optionsMap = {"disableAllPlugins": True, "disablePlugins": [],
                      "enableAllPlugins": False, "enablePlugins": ["cluster", "storage", "networking"],
                      "pluginOptions": [], "disableUserDefinedModules": False,
                      "enableDebugLogging": False, "modifiedArchiveLayout": True, "listModules": False,
                      "filePathArray": [], "timestamp": "2014-06-27_090042",
                      "archivePath": "~/sxarchive", "pathToExtractedReports": "",
                      "reportPath": "~/tmp",
                      "listOfReports": ["~/Downloads/sosreport-rh6node1.examplerh.com.tar.xz",
                                        "~/Downloads/sosreport-rh6node2.examplerh.com.tar.xz",
                                        "~/Downloads/sosreport-rh6node3.examplerh.com..tar.xz"]}
        sxconsole = SXConsole(optionsMap, uid)
        message = "Extracting and Analyzing the reports with \"%s\"." %(os.path.basename(sys.argv[0]))
        logging.getLogger(SXCE_LOGGER_NAME).status(message)
        listOfEnabledPlugins = sxconsole.run()
        # This example will print out information showing the analysis that
        # plugins created.
        for plugin in listOfEnabledPlugins:
            print "%s analysis reports count: %d" %(plugin.getName(), len(plugin.getAnalysisReports()))
            for ar in plugin.getAnalysisReports():
                print "\t%s (Analysis Report)" %(ar.getName())
                for arSection in ar.list():
                    print "\t\t%s (Analysis Report Section)" %(arSection.getName())
                    for arSectionItem in arSection.list():
                        print "\t\t\t%s (Analysis Report Section Item)" %(arSectionItem.getName())
                        #print "%s" %(str(arSectionItem))

    except KeyboardInterrupt:
        print ""
        message =  "This script will exit since control-c was executed by end user."
        logging.getLogger(sx.MAIN_LOGGER_NAME).error(message)
        sys.exit(2)
    # #######################################################################
    # Exit the application with zero exit code since we cleanly exited.
    # #######################################################################
    sys.exit()
